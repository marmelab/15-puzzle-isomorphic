service: server

plugins:
  - serverless-dynamodb-local
  - serverless-offline # needs to be last in the list

custom:
  serverless-offline:
    port: 3001

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  puzzle_api_hello:
    handler: handler.hello
    events:
      - http:
            path: /api/hello
            method: GET
            cors: true

  puzzle_api_new:
    handler: handler.new
    events:
      - http:
            path: /api/game
            method: POST
            cors: true

  puzzle_api_game:
    handler: handler.game
    events:
      - http:
            path: /api/game/{id}
            method: GET
            cors: true

  puzzle_api_game_join:
    handler: handler.join
    events:
      - http:
            path: /api/game/{id}/join
            method: DELETE
            cors: true

  puzzle_api_game_move:
    handler: handler.move
    events:
      - http:
            path: /api/game/{id}/move/{tile}
            method: PUT
            cors: true

  puzzle_api_games:
    handler: handler.games
    events:
      - http:
            path: /api/games/open
            method: GET
            cors: true

resources:
  Resources:
    GameDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: Game
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
